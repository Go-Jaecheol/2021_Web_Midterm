{"version":3,"sources":["components/SearchMusic/SearchBar.js","components/SearchMusic/SearchMusic.js","components/Modal/EditModal.js","components/Calendar/Calendar.js","components/Main/Main.js","App.js","index.js"],"names":["SearchPreview","name","artist","index","clickHandler","onClick","className","SearchBar","results","keyword","updateField","date","ClickHandler","tilObj","window","localStorage","setItem","JSON","stringify","renderResults","map","length","placeholder","value","onChange","e","target","getItem","parse","SearchMusic","state","matchName","keyLen","toLowerCase","substring","onSearch","text","a","fetch","process","dataArr","json","data","parsedData","console","log","message","setState","field","update","this","props","Component","EditModal","close","Calendar","useState","moment","getDate","setDate","today","clickDate","setClickDate","isOpenModal","setOpenModal","closeModal","clone","subtract","format","add","startWeek","startOf","week","lastWeek","endOf","arr","push","Array","fill","cur","isSelected","isGray","isSaved","undefined","createCalendar","visible","width","height","effect","onClickAway","Main","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uYAoDMA,EAAgB,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,aAC5C,OACE,qBAAKC,QAAU,kBAAMD,EAAaH,EAAMC,IACtCI,UAAS,yBAA6B,GAATH,EAAa,QAAU,IADtD,SAGE,sBAAKG,UAAU,QAAf,UACE,mBAAGA,UAAU,OAAb,SAAqBL,IACrB,mBAAGK,UAAU,SAAb,SAAuBJ,UAMhBK,EA9DG,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,QAASC,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,YAAaC,EAAU,EAAVA,KAC9CC,EAAe,SAACX,EAAMC,GACxB,IAAMW,EAAS,CAAEZ,OAAMC,UACvBY,OAAOC,aAAaC,QAAQL,EAAOM,KAAKC,UAAUL,IAClDH,EAAY,UAAW,IAAI,GAC3BA,EAAY,UAAW,KAOrBS,EAAgBX,EAAQY,KAAI,WAAmBjB,GAAW,IAA3BF,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,OACvC,OACE,cAAC,EAAD,CAEEE,aAAcQ,EACdT,MAAOA,EACPF,KAAMA,EACNC,OAAQA,GAJHC,MAQX,OACE,sBAAKG,UAAU,OAAf,UACE,wBACED,QAAS,WAjBbK,EAAY,UAAW,KAkBnBJ,UAAS,qBAAgBG,EAAQY,OAAS,EAAI,SAAW,YAF3D,eAMA,uBACEf,UAAU,aACVgB,YAAY,SACZC,MAAOd,EACPe,SAAU,SAAAC,GAAC,OAAIf,EAAY,UAAWe,EAAEC,OAAOH,UAGhDf,EAAQa,OAAS,EAChB,qBAAKf,UAAU,iBAAf,SAAiCa,IAC/B,KACJ,mBAAGb,UAAU,aAAb,mBACA,mBAAGA,UAAU,WAAb,SAA+D,OAAtCQ,OAAOC,aAAaY,QAAQhB,GAAiB,GAAKM,KAAKW,MAAMd,OAAOC,aAAaY,QAAQhB,IAAOV,OACzH,mBAAGK,UAAU,cAAb,oBACA,mBAAGA,UAAU,YAAb,SAAgE,OAAtCQ,OAAOC,aAAaY,QAAQhB,GAAiB,GAAKM,KAAKW,MAAMd,OAAOC,aAAaY,QAAQhB,IAAOT,aCKjH2B,E,4MAhDbC,MAAQ,CACNrB,QAAS,GACTD,QAAS,I,EAGXuB,UAAY,SAAC9B,EAAMQ,GACjB,IAAIuB,EAASvB,EAAQY,OAErB,OADApB,EAAOA,EAAKgC,cAAcC,UAAU,EAAGF,GACxB,IAAXvB,GACGR,GAAQQ,EAAQwB,e,EAGzBE,S,uCAAW,WAAMC,GAAN,mBAAAC,EAAA,yDACG,IAARD,EADK,0CAIWE,MAAM,gEAAD,OAC6CF,EAD7C,oBAC6DG,mCAD7D,iBAJhB,cAILC,EAJK,gBAOQA,EAAQC,OAPhB,OAOLC,EAPK,OAQLC,EAAaD,EAAI,QAAJ,mBARR,kDAULE,QAAQC,IAAI,KAAIC,SAVX,QAYP,EAAKC,SAAS,CAAEvC,QAASmC,IAZlB,wBAaF,EAAKI,SAAS,CAAEvC,QAAS,KAbvB,0D,wDAgBXE,YAAc,SAACsC,EAAOzB,GAA0B,IAAnB0B,IAAkB,yDACzCA,GAAQ,EAAKd,SAASZ,GAC1B,EAAKwB,SAAL,eAAiBC,EAAQzB,K,4CAE3B,WACE,MAA2B2B,KAAKpB,MAA1BtB,EAAN,EAAMA,QAASC,EAAf,EAAeA,QAEf,OACE,qBAAKH,UAAU,SAAf,SACE,cAAC,EAAD,CACEE,QAASA,EACTC,QAASA,EACTC,YAAawC,KAAKxC,YAClBC,KAAMuC,KAAKC,MAAMxC,a,GA1CDyC,aCoBXC,EAnBG,SAACF,GACf,IAAMG,EAAeH,EAAfG,MAAO3C,EAAQwC,EAARxC,KAEb,OACI,sBAAKL,UAAU,YAAf,UACI,qBAAKA,UAAU,YAAf,SACI,cAAC,EAAD,CAAaK,KAAMA,MAEvB,qBAAKL,UAAU,cAEf,sBAAKA,UAAU,cAAf,UACI,wBAAQA,UAAU,UAAUD,QAASiD,EAArC,0BACA,wBAAQhD,UAAU,WAAWD,QAASiD,EAAtC,iCCoDDC,MA7Df,WACQ,MAA2BC,mBAASC,OAApC,mBAAOC,EAAP,KAAgBC,EAAhB,KACMC,EAAQF,EAEd,EAAkCF,qBAAlC,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAAoCN,oBAAS,GAA7C,mBAAOO,EAAP,KAAoBC,EAApB,KAKMC,EAAa,WACfD,GAAa,IA+BjB,OAEI,sBAAK1D,UAAU,WAAf,UACI,sBAAKA,UAAU,eAAf,UACI,wBAAQA,UAAU,UAAUD,QAAS,WAAMsD,EAAQD,EAAQQ,QAAQC,SAAS,EAAG,WAA/E,SAA2F,cAAC,IAAD,MAC3F,sBAAM7D,UAAU,gBAAhB,SAAkCsD,EAAMQ,OAAO,eAC/C,wBAAQ9D,UAAU,WAAWD,QAAS,WAAMsD,EAAQD,EAAQQ,QAAQG,IAAI,EAAG,WAA3E,SAAuF,cAAC,IAAD,SAE3F,sBAAK/D,UAAU,eAAf,UApCR,WAII,IAHA,IAAMgE,EAAYV,EAAMM,QAAQK,QAAQ,SAASC,OAC3CC,EAAmD,IAAxCb,EAAMM,QAAQQ,MAAM,SAASF,OAAe,GAAKZ,EAAMM,QAAQQ,MAAM,SAASF,OAC3FG,EAAM,GAHY,WAIbH,GACLG,EAAIC,KACA,qBAAKtE,UAAU,MAAf,SAEQuE,MAAM,GAAGC,KAAK,GAAG1D,KAAI,SAACsB,EAAMvC,GACxB,IAAI4E,EAAMnB,EAAMM,QAAQM,KAAKA,GAAMD,QAAQ,QAAQF,IAAI3B,EAAKvC,EAAO,OAC/D6E,EAAapB,EAAMQ,OAAO,cAAgBW,EAAIX,OAAO,YAAc,WAAa,GAChFa,EAASF,EAAIX,OAAO,QAAUR,EAAMQ,OAAO,MAAQ,GAAK,OACxDc,EAAgE,OAAtDpE,OAAOC,aAAaY,QAAQoD,EAAIX,OAAO,WAAsB,GAAK,QAChF,OACI,qBAAK9D,UAAS,cAAS0E,EAAT,YAAuBC,EAAvB,YAAiCC,GAAuB7E,QAAU6E,EAAU,WAtBpG,IAACvE,IAsBoHoE,EAAIX,OAAO,UArB9IN,EAAanD,GACbqD,GAAa,SAoBgJmB,EAArI,SACI,sBAAM7E,UAAS,OAAf,SAA0ByE,EAAIX,OAAO,QADsBjE,OARrDqE,KAFzBA,EAAOF,EAAWE,GAAQC,EAAUD,IAAS,EAA7CA,GAqBT,OAAOG,EAYES,GACD,cAAC,IAAD,CAAOC,QAAStB,EAAauB,MAAM,MAAMC,OAAO,MAAMC,OAAO,aAAaC,YAAaxB,EAAvF,SACI,cAAC,EAAD,CAAWX,MAAOW,EAAYtD,KAAMkD,aC1B7C6B,MA1Bf,WACI,IAAM9B,EAAQH,MAASW,OAAO,UAC9B,EAAoCZ,oBAAS,GAA7C,mBAAOO,EAAP,KAAoBC,EAApB,KAIMC,EAAa,WACfD,GAAa,IAGjB,OACI,eAAC,WAAD,WACI,sBAAK1D,UAAU,WAAf,UACI,wBAAQA,UAAU,WAAWD,QAVvB,WACd2D,GAAa,IASL,SAAmD,cAAC,IAAD,MACnD,cAAC,IAAD,CAAOqB,QAAStB,EAAauB,MAAM,MAAMC,OAAO,MAAMC,OAAO,aAAaC,YAAaxB,EAAvF,SACI,cAAC,EAAD,CAAWX,MAAOW,EAAYtD,KAAMiD,SAI5C,qBAAKtD,UAAU,WAAf,SACI,cAAC,EAAD,UCjBDqF,MARf,WACE,OACE,qBAAKrF,UAAU,MAAf,SACE,cAAC,EAAD,OCFNsF,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1ef04b36.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./SearchBar.scss\";\n\nconst SearchBar = ({ results, keyword, updateField, date}) => {\n  var ClickHandler = (name, artist) => {\n    const tilObj = { name, artist };\n    window.localStorage.setItem(date , JSON.stringify(tilObj));\n    updateField(\"keyword\", \"\", false);\n    updateField(\"results\", []);\n  };\n\n  var cancelSearch = () => {\n    updateField(\"keyword\", \"\");\n  };\n\n  var renderResults = results.map(({ name, artist }, index) => {\n    return (\n      <SearchPreview\n        key={index}\n        clickHandler={ClickHandler}\n        index={index}\n        name={name}\n        artist={artist}\n      />\n    );\n  });\n  return (\n    <div className=\"auto\">\n      <button\n        onClick={() => cancelSearch()}\n        className={`cancel-btn ${keyword.length > 0 ? \"active\" : \"inactive\"}`}\n      >\n        x\n      </button>\n      <input\n        className=\"search-bar\"\n        placeholder=\"Search\"\n        value={keyword}\n        onChange={e => updateField(\"keyword\", e.target.value)}\n      />\n      \n      {results.length > 0 ? (\n        <div className=\"search-results\">{renderResults}</div>\n      ) : null}\n      <p className=\"titleLabel\">Title</p>\n      <p className=\"titleVal\">{window.localStorage.getItem(date) === null ? '' : JSON.parse(window.localStorage.getItem(date)).name}</p>\n      <p className=\"artistLabel\">Artist</p>\n      <p className=\"artistVal\">{window.localStorage.getItem(date) === null ? '' : JSON.parse(window.localStorage.getItem(date)).artist}</p>\n    </div>\n  );\n};\n\nconst SearchPreview = ({ name, artist, index, clickHandler }) => {\n  return (\n    <div onClick={ () => clickHandler(name, artist)}\n      className={`search-preview ${index == 0 ? \"start\" : \"\"}`}\n    >\n      <div className=\"first\">\n        <p className=\"name\">{name}</p>\n        <p className=\"artist\">{artist}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default SearchBar;","import SearchBar from \"./SearchBar\";\nimport React, { Component } from \"react\";\n\nclass SearchMusic extends Component {\n  state = {\n    keyword: \"\",\n    results: []\n  };\n\n  matchName = (name, keyword) => {\n    var keyLen = keyword.length;\n    name = name.toLowerCase().substring(0, keyLen);\n    if (keyword == \"\") return false;\n    return name == keyword.toLowerCase();\n  };\n\n  onSearch = async text => {\n    if (text != \"\") {\n      var dataArr, data, parsedData;\n      try {\n        dataArr = await fetch(\n          `https://ws.audioscrobbler.com/2.0/?method=track.search&track=${text}&api_key=${process.env.REACT_APP_LASTFM_API}&format=json`\n        );\n        data = await dataArr.json();\n        parsedData = data[\"results\"][\"trackmatches\"][\"track\"];\n      } catch (err) {\n        console.log(err.message);\n      }\n      this.setState({ results: parsedData });\n    } else this.setState({ results: [] });\n  };\n\n  updateField = (field, value, update = true) => {\n    if (update) this.onSearch(value);\n    this.setState({ [field]: value });\n  };\n  render() {\n    let { results, keyword } = this.state;\n\n    return (\n      <div className=\"Search\">\n        <SearchBar\n          results={results}\n          keyword={keyword}\n          updateField={this.updateField}\n          date={this.props.date}\n        />\n      </div>\n    );\n  }\n}\n\nexport default SearchMusic;","import React, { useState } from 'react';\nimport \"./EditModal.scss\";\nimport SearchMusic from '../SearchMusic/SearchMusic';\n\nconst EditModal = (props) => {\n    const{close, date} = props;\n\n    return (\n        <div className=\"editModal\">\n            <div className=\"modalHead\">\n                <SearchMusic date={date}/>\n            </div>\n            <div className=\"modalBody\">\n            </div>\n            <div className=\"modalFooter\">\n                <button className=\"editBtn\" onClick={close}>등록</button>\n                <button className=\"closeBtn\" onClick={close}>닫기</button>    \n            </div>\n        </div>\n                        \n    );\n}\n\nexport default EditModal;","import React, { useState } from 'react';\nimport './Calendar.scss';\nimport { MdChevronLeft, MdChevronRight } from 'react-icons/md';\nimport moment from 'moment';\nimport Modal from 'react-awesome-modal';\nimport EditModal from '../Modal/EditModal';\n\nfunction Calendar() {\n        const [getDate, setDate] = useState(moment());\n        const today = getDate;\n\n        const [clickDate, setClickDate] = useState();\n        const [isOpenModal, setOpenModal] = useState(false);\n        const openModal = (date) => {\n            setClickDate(date);\n            setOpenModal(true);\n        }\n        const closeModal = () => {\n            setOpenModal(false);\n        }\n\n        function createCalendar() {\n            const startWeek = today.clone().startOf('month').week();\n            const lastWeek = today.clone().endOf('month').week() === 1 ? 53 : today.clone().endOf('month').week();\n            let arr = [];\n            for (let week = startWeek; week <= lastWeek; week++) {\n                arr.push(\n                    <div className=\"row\" key={week}>\n                        {\n                            Array(7).fill(0).map((data, index) => {\n                                let cur = today.clone().week(week).startOf('week').add(data+index, 'day');\n                                let isSelected = today.format('YYYYMMDD') === cur.format('YYYYMMDD') ? 'selected' : '';\n                                let isGray = cur.format('MM') === today.format('MM') ? '' : 'gray';\n                                let isSaved = window.localStorage.getItem(cur.format('YYMMDD')) === null ? '' : 'saved';\n                                return(\n                                    <div className={`box ${isSelected} ${isGray} ${isSaved}`} key={index} onClick={ isSaved ? () => {openModal(cur.format('YYMMDD'));} : undefined }>\n                                        <span className={`text`}>{cur.format('D')}</span>\n                                    </div>\n                                \n                                )\n                                \n                            })\n                        }\n                    </div>\n                )\n            }\n            return arr;\n        }\n        \n        return (\n            \n            <div className=\"Calendar\">\n                <div className=\"calendarHead\">\n                    <button className=\"leftBtn\" onClick={()=>{ setDate(getDate.clone().subtract(1, 'month'))}}><MdChevronLeft /></button>\n                    <span className=\"calendarTitle\">{ today.format('YYYY MMMM') }</span>\n                    <button className=\"rightBtn\" onClick={()=>{ setDate(getDate.clone().add(1, 'month'))}}><MdChevronRight /></button>\n                </div>\n                <div className=\"calendarBody\">\n                    {createCalendar()}\n                    <Modal visible={isOpenModal} width=\"400\" height=\"250\" effect=\"fadeInDown\" onClickAway={closeModal} >\n                        <EditModal close={closeModal} date={clickDate} ></EditModal>\n                    </Modal>\n                </div>\n                \n            </div>\n        );\n    }\n\nexport default Calendar;\n","import React, { Fragment, useState } from 'react';\nimport \"./Main.scss\";\nimport { FiEdit } from 'react-icons/fi';\nimport Calendar from \"../Calendar/Calendar\";\nimport Modal from 'react-awesome-modal';\nimport EditModal from '../Modal/EditModal';\nimport moment from 'moment';\n\nfunction Main() {\n    const today = moment().format(\"YYMMDD\");\n    const [isOpenModal, setOpenModal] = useState(false);\n    const openModal = () => {\n        setOpenModal(true);\n    }\n    const closeModal = () => {\n        setOpenModal(false);\n    }\n\n    return (\n        <Fragment>\n            <div className=\"mainHead\">\n                <button className=\"inputBar\" onClick={ openModal }><FiEdit /></button>\n                <Modal visible={isOpenModal} width=\"400\" height=\"250\" effect=\"fadeInDown\" onClickAway={closeModal} >\n                    <EditModal close={closeModal} date={today} ></EditModal>\n                </Modal>\n\n            </div>\n            <div className=\"mainBody\">\n                <Calendar></Calendar>\n            </div>\n        </Fragment>\n    );\n}\n\nexport default Main;","import React from 'react';\nimport Main from './components/Main/Main';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main></Main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}